{"ast":null,"code":"var _jsxFileName = \"/Users/maksimantonov/mesto-react/src/components/EditAvatarPopup.js\",\n  _s = $RefreshSig$();\nimport PopupWithForm from \"./PopupWithForm\";\nimport { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditAvatarPopup(props) {\n  _s();\n  const avatarRef = useRef();\n  useEffect(() => {\n    avatarRef.current.value = \"\";\n  }, [props.opened]);\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onUpdateAvatar({\n      avatar: avatarRef.current.value\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"avatar\",\n    opened: props.opened,\n    title: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n    buttonText: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    closed: closePopup,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form__input form__input_type_link\",\n      type: \"url\",\n      id: \"avatarLink\",\n      name: \"avatar\",\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n      required: \"\",\n      ref: useRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"avatarLink-error\",\n      className: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(EditAvatarPopup, \"i3A8oX/ZqNHll67C7LWBaRG0gLQ=\");\n_c = EditAvatarPopup;\nvar _c;\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"names":["PopupWithForm","useRef","useEffect","EditAvatarPopup","props","avatarRef","current","value","opened","handleSubmit","e","preventDefault","onUpdateAvatar","avatar","closePopup"],"sources":["/Users/maksimantonov/mesto-react/src/components/EditAvatarPopup.js"],"sourcesContent":["import PopupWithForm from \"./PopupWithForm\";\nimport {useRef, useEffect} from 'react';\n\nexport default function EditAvatarPopup (props) {\n    const avatarRef = useRef();\n    useEffect(() =>{\n        avatarRef.current.value = \"\";\n    }, [props.opened])\n\n\nfunction handleSubmit(e) {\n    e.preventDefault();\n    props.onUpdateAvatar({\n        avatar: avatarRef.current.value,\n    });\n}\n\nreturn(\n    <PopupWithForm\n       name=\"avatar\" \n       opened={props.opened}\n       title=\"Обновить аватар\"\n       buttonText=\"Сохранить\"\n       closed={closePopup}\n       onSubmit={handleSubmit}\n      >\n        <input\n          className=\"form__input form__input_type_link\"\n          type=\"url\"\n          id=\"avatarLink\"\n          name=\"avatar\"\n          placeholder=\"Ссылка на картинку\"\n          required=\"\"\n          ref={useRef}\n          />\n            <span id=\"avatarLink-error\" className=\"error\" />\n      </PopupWithForm>\n)}"],"mappings":";;AAAA,OAAOA,aAAa,MAAM,iBAAiB;AAC3C,SAAQC,MAAM,EAAEC,SAAS,QAAO,OAAO;AAAC;AAExC,eAAe,SAASC,eAAe,CAAEC,KAAK,EAAE;EAAA;EAC5C,MAAMC,SAAS,GAAGJ,MAAM,EAAE;EAC1BC,SAAS,CAAC,MAAK;IACXG,SAAS,CAACC,OAAO,CAACC,KAAK,GAAG,EAAE;EAChC,CAAC,EAAE,CAACH,KAAK,CAACI,MAAM,CAAC,CAAC;EAGtB,SAASC,YAAY,CAACC,CAAC,EAAE;IACrBA,CAAC,CAACC,cAAc,EAAE;IAClBP,KAAK,CAACQ,cAAc,CAAC;MACjBC,MAAM,EAAER,SAAS,CAACC,OAAO,CAACC;IAC9B,CAAC,CAAC;EACN;EAEA,oBACI,QAAC,aAAa;IACX,IAAI,EAAC,QAAQ;IACb,MAAM,EAAEH,KAAK,CAACI,MAAO;IACrB,KAAK,EAAC,uFAAiB;IACvB,UAAU,EAAC,wDAAW;IACtB,MAAM,EAAEM,UAAW;IACnB,QAAQ,EAAEL,YAAa;IAAA,wBAEtB;MACE,SAAS,EAAC,mCAAmC;MAC7C,IAAI,EAAC,KAAK;MACV,EAAE,EAAC,YAAY;MACf,IAAI,EAAC,QAAQ;MACb,WAAW,EAAC,oGAAoB;MAChC,QAAQ,EAAC,EAAE;MACX,GAAG,EAAER;IAAO;MAAA;MAAA;MAAA;IAAA,QACV,eACA;MAAM,EAAE,EAAC,kBAAkB;MAAC,SAAS,EAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACtC;AACrB;AAAC,GAlCsBE,eAAe;AAAA,KAAfA,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}